name: Deploy Part Management System to AWS

on:
  none: # Prevents the workflow from being triggered, comment this line when your project is ready with all placeholders replaced with correct values and uncomment next 3 lines
  #push:
  #  branches:
  #    - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step to login to Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.<REPLACE_WITH_DOCKERHUB_PASSWORD> }}" | docker login -u "${{ secrets.<REPLACE_WITH_DOCKERHUB_USERNAME> }}" --password-stdin

      # Step to build and push Docker image
      - name: Configure Docker Details
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployment/Dockerfile
          push: true
          tags: docker.io/<REPLACE_WITH_DOCKERHUB_USERNAME>/<REPLACE_WITH_DOCKER_REPO_NAME>:latest

      # Step to configure AWS credential details
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.<REPLACE_WITH_AWS_ACCESS_KEY_ID> }} #create this secret in github with correct value from AWS access keyID
          aws-secret-access-key: ${{ secrets.<REPLACE_WITH_AWS_SECRET_ACCESS_KEY> }} # create this as secret in github with correct value of AWS KEy Value
          aws-region: <REPLACE_WITH_AWS_REGION> # e.g., ap-southeast-2

      # Step to login to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step to Build, Tag, and Push Docker image to ECR
      - name: Build, Tag, and Push Docker image to ECR
        run: |
            docker build -t <REPLACE_WITH_DOCKER_REPO_NAME> -f ./deployment/Dockerfile .# make sure you keep your dockerfile in deployment folder in your project
            docker tag awsprojectrepo:latest <REPLACE_WITH_ECR_REGISTRY>/<REPLACE_WITH_DOCKER_USERNAME>/<REPLACE_WITH_DOCKER_REPO_NAME>:latest
            docker push <REPLACE_WITH_ECR_REGISTRY>/<REPLACE_WITH_DOCKER_USERNAME>/<REPLACE_WITH_DOCKER_REPO_NAME>:latest

      # Step to Deploy the CloudFormation stack # create stack in AWS cloudformation using cloudformation file text by using editor.
      - name: Deploy to AWS
        run: |
            aws cloudformation update-stack --stack-name <REPLACE_WITH_STACK_NAME> --template-body file://deployment/cloudformation.yaml --capabilities CAPABILITY_NAMED_IAM --region <REPLACE_WITH_AWS_REGION>
